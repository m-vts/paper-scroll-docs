FORMAT: 1A
HOST: https://paper-scroll.ru/api/

# paper-scroll

Здесь представлен список доступных секций и методов API игры [Paper Scroll](https://vk.com/app7420483).

Любые вопросы о работе API вы можете задать в нашем [сообществе ВКонтакте](https://vk.com/paper_scroll) или [специальной беседе](https://vk.me/join/AJQ1d4PhyRd9VqY5MOofYEWD).

Для отправки запросов вам необходимо создать магазин внутри приложения и получить к нему ключ доступа по ссылке [vk.com/app7420483#create_merchant](https://vk.com/app7420483#create_merchant)

### Отправка запросов

Данные запросов и ответов передаются в формате JSON в кодировке UTF-8. <br/>
Базовый адрес для отправки запросов: https://paper-scroll.ru/api/{method}

К каждому отправляемому запросу необходимо добавлять заголовок `Authorization` с типом `Basic` и base64-закдированной строкой `merchant_id:access_token` (не пропустите двоеточие между двумя строками).

Например: `Authorization: Basic MjozNTJlYTIyMTZlZDEzYmZhMDlhNTk0ZQ==`
 
### Лимиты

С использованием одного ключа доступа можно отправить не больше 3 запросов в секунду. 

Также для каждого IP адреса имеется лимит на 10 запросов в секунду.

### Обработка ошибок

Ошибки API всегда возвращаются с HTTP кодом 400 Bad Request и имеют общий формат:

```
{
    "error": {
        "error_code": 1,
        "error_msg": "Internal error",
        "error_text": "Внутренняя ошибка сервиса, повторите запрос позже"
    }
}
```

Основной список ошибок, возвращаемых для всех методов:

- **#1 - Internal error** (Внутренняя ошибка сервиса)
- **#2 - Authorize error** (Неверно передан ключ доступа)
- **#3 - Access error** (Ошибка доступа к секции/методу)
- **#4 - Flood limit** (Превышен лимит на частоту обращений)
- **#5 - Unknown method** (Не определена секция/метод API)
- **#6 - Invalid params** <br/> (Неверно переданы параметры к запросу.<br/>Возвращается, если для метода не опредлены собственные типы ошибок.)

Также в ходе выполнения могут произойти специальные ошибки, уникальные для каждого запрашиваемого метода.

### Получение уведомлений

С помощью метода `callbacks.create` вы можете настроить отправку уведомлений о получении новых переводов на собственный сервер.<br/>
Данные отправляются методом `POST` в формате `application/json`.

На данный момент поддерживаются события: `transfer_new`.

Пример отправляемого события:
```
{
    "type": "transfer_new",
    "object": {
        "transfer_id": 37356,
        "user_id": 595626484,
        "peer_id": 100772411,
        "external_id": 37357,
        "is_initiator": true,
        "type": "merchant",
        "object_type": "balance",
        "object_type_id": 0,
        "amount": 1000,
        "create_date": 1590134400
    },
    "secret": "yQ7Z1LDDG83Q8r8Ym9Yu2aXzBc51T06Q"
}
```

Событие считается успешно отправленным, если ответ сервера содержит HTTP код `200 OK`.<br/>
При ошибке событие будет отправлено на сервер ещё раз через 30 секунд.

# Merchants [/merchants]

## /merchants.get [POST]

Возвращает информацию о магазинах по их идентификаторам

+ Request (application/json)

    + Attributes
        + merchant_ids: (array[number], optional) 
            ID магазинов, не больше 100 элементов. <br/>
            По умолчанию — идентификатор текущего магазина.
        
    + Body

            {
                "merchant_ids": [1]
            }
            
+ Response 200 (application/json)
    + Attributes (object)
        + response (array[Merchant]) - Список запрошенных магазинов

## /merchants.edit [POST]

Редактирует информацию о текущем магазине

+ Request (application/json)

    + Attributes
        + name (string, optional) 
            Новое название магазина
            
        + group_id (number, optional) 
            ID сообщества ВКонтакте, к которому будет привязан магазин
            
        + avatar (string, optional) 
            Ссылка на новое изображение магазина <br/>
            Должно быть загружено на сервер ВКонтакте и иметь адрес формата `https://pp.userapi.com/******.jpg`
            
    + Body

            {
                "name": "Мой магазин",
                "group_id": 194441652,
                "avatar": "https://pp.userapi.com/..../Z6AEvIhxwjI.jpg"
            }
            
+ Response 200 (application/json)
    + Attributes (object)
        + response: true (boolean) - Результат выполнения запроса
        
    + Body

            {
                "response": true
            }

# Callbacks [/callbacks]

## /callbacks.create [POST]

Создает Callback сервер для отправки уведомлений о событиях 

+ Request (application/json)

    + Attributes
        + url (string, required) 
            URL для отправки уведомлений
            
        + events (array[string], required)
            Типы отправляемых событий на сервер
            
    + Body

            {
                "url": "https://example.com/callback",
                "events": ["transfer_new"]
            }
            
+ Response 200 (application/json)
    + Attributes (object)
        + response (Callback) - Объект созданного сервера
            
## /callbacks.delete [POST]

Удялает текущий используемый сервер 

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (object)
        + response: true (boolean) - Результат выполнения запроса
        
    + Body

            {
                "response": true
            }
            
## /callbacks.getLogs [POST]

Возвращает информацию о последних 20 ошибках при отправке событий

+ Request (application/json)
            
+ Response 200 (application/json)
    + Attributes (object)
        + response: [] (array[string]) - Результат выполнения запроса
        
    + Body

            {
                "response": [
                    "22.05.2019 11:44:20 — 404 Not found",
                    "22.05.2019 11:44:22 — 404 Not found"
                ]
            }
            

# Users [/users]

## /users.get [POST]

Возвращает информацию о пользователях по их идентификаторам

+ Request (application/json)

    + Attributes
        + user_ids (array[number], required) 
            ID пользователей, не больше 100 элементов.<br/>
            Если профиль пользователя ещё не был создан в приложении, то объекта с его данными в массиве не будет.
        
    + Body

            {
                "user_ids": [595626484]
            }
            
+ Response 200 (application/json)
    + Attributes (object)
        + response (array[User]) - Список запрошенных профилей пользователей

## /users.getBalances [GET]

Возвращает информацию о балансах пользователей по их идентификаторам

+ Request (application/json)

    + Attributes
        + user_ids (array[number], optional) - ID пользователей, не больше 250 элементов
        
    + Body

            {
                "user_ids": [595626484]
            }
            
+ Response 200 (application/json)
    + Attributes (object)
        + response (array[UserBalance])
        
            Список запрошенных балансов пользователей. <br/>
            Если профиль пользователя ещё не был создан в приложении, то объекта с его данными в массиве не будет.


# Transfers [/transfers]

## /transfers.create [POST]

Запускает выполнение нового перевода

+ Request (application/json)

    + Attributes

        + peer_id (number, required) - ID получателя перевода
        + object_type (enum[string], required) - Тип переводимых предметов
        
            + Members
                + `balance` - Рулоны
                + `disinfectants` - Средства защиты
                + `items` - Предметы из инвентаря
                
        + object_type_id (number) 
            При **object_type** = **disinfectants** или **items** содержит ID предмета <br/>
            При **object_type** = **balance** всегда имеет значение `0`
        
        
        + amount (number) 
            Переводимая сумма в тыс. долях при **object_type** = **balance** <br/>
            В остальных случаях - количество переводимых предметов

    + Body

            {
                "peer_id": 100772411,
                "object_type": "balance",
                "object_type_id": 0,
                "amount": 1000
            }
            
+ Response 200 (application/json)
    + Attributes (object)
        + response (Transfer) - Объект созданного перевода

## /transfers.get [POST]

Возвращает список переводов по их идентификаторам

+ Request (application/json)

    + Attributes
        + transfer_ids (array[number], required) 
            ID переводов, не больше 100 элементов.<br/>
            Если перевод не пренадлежит текущему пользователю или ещё не создан, то объекта с его данными в массиве не будет.
        
    + Body

            {
                "transfer_ids": [37356]
            }
            
+ Response 200 (application/json)
    + Attributes (object)
        + response (array[Transfer]) - Список запрошенных переводов

## /transfers.getHistory [POST]

Возвращает список последних переводов

+ Request (application/json)

    + Attributes
        + filter: `all` (enum[string], optional) - Фильтр по типу переводов
            + Default: `all`
            
            + Members
                + `all` - Все переводы
                + `incoming` - Только входящие переводы
                + `outcoming` - Только исходящие переводы
                
        + offset: 0 (number, optional) - Смещение относительно первого найденного перевода
        
        + limit: 100 (number, optional) - Количество возвращаемых переводов, не больше 250 элементов.
        
    + Body

            {
                "filter": "all",
                "offfset": 0,
                "limit": 250
            }
            
+ Response 200 (application/json)
    + Attributes (object)
        + response (array[Transfer]) - Список запрошенных переводов


# Data Structures

## Merchant (object)
+ merchant_id: `1`, `2`, `3` (number, required)
    ID магазина
    
+ owner_id: 595626484 (number, required)
    ID владельца магазина
    
+ group_id: 194441652 (number, required)
    ID сообщества ВКонтакте, к которому будет привязан магазин
    
+ name: `Мой магазин` (string, required)
    Название магазина
    
+ avatar: `https://pp.userapi.com/aYxZDDg1UmaxPa_hFL-eCWlGO3oDuJou4z6ZIg/Z6AEvIhxwjI.jpg` (string, required)
    Изображение магазина
    
+ balance: 250000 (number, required)
    Баланс магазина в тыс. долях рулонов
    
+ create_date: 1590134400 (number, required)
    Дата создания магазина

## User (object)
+ user_id: 595626484 (number, required) 
    ID пользователя
    
+ first_name: `Pi Emerollo` (string, required) 
    Имя пользователя
    
+ last_name: `Emerollo` (string, required)
    Фамилия пользователя
    
+ avatar: `https://pp.userapi.com/.../yaoqoZbLB08.jpg` (string, required)
    URL квадратной фотографии пользователя размером 50x50 или 100x100 пикселей
    
+ avatar_max: `https://pp.userapi.com/.../yaoqoZbLB08.jpg` (string, required)
    URL квадратной фотографии пользователя размером 200x200 или 400x400 пикселей
    
+ balance: 100000 (number, required)
    Баланс пользователя в тыс. долях рулонов
    
+ improvements_sum: 1000 (number, required)
    Сумма улучшений в тыс. долях рулонов
    
+ bonuses_sum: 250 (number, required) 
    Сумма бонусов в тыс. долях

## UserBalance (object)
+ user_id: 595626484 (number, required)
    ID пользователя
+ balance: 100000 (number, required)
    Баланс пользователя в тыс. долях рулонов

## Transfer (object)
+ transfer_id: 37356 (number, required)
    ID перевода
+ user_id: 595626484 (number, required)
    ID инициатора перевода
+ peer_id: 100772411 (number, required)
    ID получателя перевода
+ external_id: 37357 (number, required)
    ID перевода для получателя
+ is_initiator: true (boolean, required)
    Является ли текущий пользователь инициатором
    
+ type (enum[string], required)
    Тип перевода

    + Default: `transfer`
    + Members
        + `merchant` - Перевод от/в магазин
        + `transfer` - Стандартный перевод между пользователями (user-only)
        + `steal` - Кража другим пользователем (user-only)
        + `loss` - Потеря от заражения (user-only)
        + `achievement` - Бонус за полученное достижение (user-only)

+ object_type (enum[string], required)
    Тип переводимых предметов

    + Default: `balance`
    + Members
        + `balance` - Рулоны
        + `disinfectants` - Средства защиты
        + `items` - Предметы из инвентаря

+ object_type_id: 0 (number, required) 
    При **object_type** = **disinfectants** или **items** содержит ID предмета <br/>
    При **object_type** = **balance** всегда имеет значение `0`

+ amount: 1000 (number, required) 
    Переводимая сумма в тыс. долях при **object_type** = **balance** <br/>
    В остальных случаях - количество переводимых предметов

+ create_date: 1590134400 (number, required)
    Дата отправки перевода

## Callback (object)
+ callback_id: 1 (number, required)
    ID сервера
+ merchant_id: 1 (number, required)
    ID магазина, которым используется сервер
+ events: transfer_new (array[enum[string]], required)
    Типы отправляемых событий на сервер
+ secret: `yQ7Z1LDDG83Q8r8Ym9Yu2aXzBc51T06Q` (string, required) 
    Секретный ключ, отправляемый вместе с запросами
+ create_date: 1590134400 (number, required)
    Дата создания сервера

## Error (object)
+ error_code: 1 (string, required)
    Код ошибки
+ error_msg: `Example error` (string, required)
    Название типа ошибки
+ error_text: `Error message example` (string, required)
    Подробное описание проблемы